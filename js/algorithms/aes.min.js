/*!
 * Crypto Exhibit v1.0.0-alpha (http://www.crypto-exhib.it)
 * Copyright 2019 Mannheim University of Applied Sciences, Kristian Kraljic
 * Licensed under GPL-3.0-or-later
 */
var forge=require("node-forge");exports.name="aes",exports.displayName="AES (Advanced Encryption Standard)",exports.group="Symmetric Key Algorithms",exports.parameters=[{name:"mode",label:"Mode of Operation",type:"select",value:"CBC",options:[{value:"ECB",label:"Electronic Codebook (ECB)"},{value:"CBC",label:"Cipher Block Chaining (CBC)"},{value:"CFB",label:"Cipher Feedback (CFB)"},{value:"OFB",label:"Output Feedback (OFB)"},{value:"CTR",label:"Counter (CTR)"},{value:"GCM",label:"Galois/Counter Mode (GCM)"}]},{name:"key",label:"Symmetric Key",type:"editor(hex)",value:"cryptoExhibit.util.randomBytes(16)",placeholder:"TODO"},{name:"iv",label:"Initialization Vector",type:"editor(hex)",value:"cryptoExhibit.util.randomBytes(16)",placeholder:"TODO"}],exports.apply=function(e,a,r){var t=("encrypt"==r?forge.cipher.createCipher:forge.cipher.createDecipher)("AES-"+a.mode,a.key);if(t.start({iv:a.iv}),t.update(forge.util.createBuffer(e)),t.finish())return t.output.getBytes()};