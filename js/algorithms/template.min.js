/*!
 * Crypto Exhibit v1.0.0-alpha (http://www.crypto-exhib.it)
 * Copyright 2018 Mannheim University of Applied Sciences, Kristian Kraljic
 * Licensed under GPL-3.0-or-later
 */
var forge=require("node-forge");exports.name="template",exports.displayName="Template Algorithm (will NOT be shown on the UI!)",exports.group="Template Algorithms",exports.parameters=[{name:"mode",label:"Mode of Operation",type:"select",value:"CBC",options:[{value:"ECB",label:"Electronic Codebook (ECB)"},{value:"CBC",label:"Cipher Block Chaining (CBC)"},{value:"CFB",label:"Cipher Feedback (CFB)"},{value:"OFB",label:"Output Feedback (OFB)"},{value:"CTR",label:"Counter (CTR)"},{value:"GCM",label:"Galois/Counter Mode (GCM)"}]},{name:"key",label:"Symmetric Key",type:"editor(hex)",value:"cryptoExhibit.util.randomBytes(16)",placeholder:"TODO"},{name:"iv",label:"Initialization Vector",type:"editor(hex)",value:"cryptoExhibit.util.randomBytes(16)",placeholder:"TODO"}],exports.input="text",exports.output="text",exports.apply=function(e,t,r){var a=("encrypt"==r?forge.cipher.createCipher:forge.cipher.createDecipher)("AES-"+t.mode,t.key);if(a.start({iv:t.iv}),a.update(forge.util.createBuffer(e)),a.finish())return a.output.getBytes()};